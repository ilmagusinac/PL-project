Here are some general guidelines and overviews for the project.

1. Your implementation should draw the game board on the screen, in a console/terminal window.
    a. i.e. you do not need to make a graphical UI for it; console-based inputs and outputs are enough.
    b. You should find a way to represent the entire board, including the player pieces, “houses” and “safehouse”.
       You can use special unicode symbols for fields, such as ◯, ⬤, … and color-coded names for pieces
       (e.g. for 4 yellow figures - y1, y2,y3, y4).

    i. The “designs” of the board and pieces are up to you.

2. When starting a new game, you should be able to choose the number of players, which ranges from 2 - 4.
    a. The players should then be able to choose their color (yellow, green, red, blue)
       and thus be placed in the appropriate position on the board.

3. The players take turns clockwise.
    a. You may choose whatever starting color for the first turn.

4. The player pieces (“pawns”) all start out in their “home positions” at the corners of the board.

5. In the first turn, each player can throw a 6-sided dice three times. The player who gets a “6” first starts off the
   game by moving one of their pieces onto the corresponding “start” position for that color (which is marked by “A” in
   the illustration).
        a. You can handle dice throws with a random number generator.
        b. Also, you may choose if you want to automatically throw the dice at the beginning
           of each turn, or let the player “trigger” the throw by some input - up to you.

6. The goal of this game is to move all of your pieces into their “safehouses”, which are the color-coded fields
   extending towards the middle of the board. A piece has to walk from its starting point (“A”) all around the board,
   clockwise, and enter into the “safehouse” of its color.

7. In all following turns (2 - end of game), players may only throw the dice one time (unless they get a “6” - discussed
   in the next point).

8. Some dice throwing rules:
    a. A player who has pieces outside of the “house” (on the board) may move them that many fields, based on the number
    on the dice.
        i. e.g. you get a 4 - you may move your piece 4 places forward on the   board.
    b. If the player gets a 6, they may choose to either move one piece 6 fields forwards, or bring another one of their
       pieces from the house into the starting position.
        i. Afterwards, due to getting a 6, they can throw one more time.
    c. If the player has 2 or more pieces on the board, they should be able to choose which piece to move.
        i. If they only have a single piece on the board, you can automatically move it for the player.

9. If your piece lands on an opponent’s piece, you “eat” it, which means that the opponent’s piece goes back to its
   respective “house”, and yours takes the position.

10. You cannot land on your own pieces. Instead, you should move a different piece or, if you have no pieces eligible,
    you skip that turn.
    a. You can either make a move that would do that invalid, or throw an error if the player attempts to move that
       piece onto an occupied position.

11. On the board, you can jump over yours and opponents’ pieces. However, you cannot jump over your own pieces in the
    “safehouse”.
    a. [ ] [ b1 ] [ ] [ ] → If this is the blue player's “safehouse”, and they have another piece b2 coming up to it,
       b2 cannot jump over b1 to take a place in front. Instead, b1 has to be moved to the front of the “safehouse”,
       so that other pieces may follow behind it.

12. The game should display the total number of turns on the screen somewhere, as well as whose turn it is currently
    (which color is playing).

13. The game should be saveable and loadable.
    a. At any point in the game, a player may choose to save the game. This should store all game info (players,
    piece positions, turns, …) into a file.
    b. When re-opening the game, there should be an option to load an existing “save file” and resume the game from the
    exact state it was left in.

14. The winner is the first player that moves all of their pieces into the “safehouse”.
    a. You can display some nice victory screen afterwards, or just a simple “Victory” message. :)